[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project.urls]
"Homepage" = "https://github.com/jcnm/peer"
"Documentation" = "https://jcnm.github.io/peer"
"Repository" = "https://github.com/jcnm/peer"
"Issue Tracker" = "https://github.com/jcnm/peer/issues"

[project]
name = "peer"
version = "0.2.0"
keywords = ["cli", "tui", "api", "sui", "tts", "speech-recognition", "assistant", "omniscient"]
description = "Peer Assistant Omniscient avec interface vocale bidirectionnelle"
readme = "README.md"
authors = [
    {name = "JCNM", email = "jcnm@sylorion.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    # DÃ©pendances de base
    "click>=8.0.0",
    "rich>=10.0.0",
    "pydantic>=1.8.0",
    "python-dotenv>=0.19.0",
    "requests>=2.25.0",
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "websockets>=10.0",
    "structlog>=21.1.0",

    # LLM et IA
    "ollama>=0.1.0",
    "transformers>=4.20.0",
    "spacy>=3.4.0",
    
    # Analyse de code
    "tree-sitter>=0.20.0",
    "pygments>=2.10.0",
    "libcst>=0.4.0",
    
    # Interface vocale
    "pyttsx3>=2.90",
    "SpeechRecognition>=3.10.0",
    "pyaudio>=0.2.11",
    "webrtcvad>=2.0.10",
    "numpy<2",
    "scipy>=1.7.0",
    
    # Utilitaires
    "tqdm>=4.62.0",
    "colorama>=0.4.4",
    "psutil>=5.8.0",
]


[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=2.12.0",
    "black>=21.5b2",
    "isort>=5.9.0",
    "mypy>=0.900",
    "flake8>=3.9.0",
]
speech = [
    "pyttsx3>=2.90",
    "pyaudio>=0.2.11",
    "SpeechRecognition>=3.10.0",
    "webrtcvad>=2.0.10",
    "whisper>=1.0.0",
    "piper-tts>=1.3.0",
    "vosk>=0.3.42",
]
ide = [
    "python-language-server>=0.36.2",
    "pygls>=0.11.3",
]


[project.scripts]
peer = "peer.interfaces.cli.cli:main"
peer-sui = "peer.interfaces.cli.cli_with_sui:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
asyncio_mode = "auto"
addopts = "--cov=peer --cov-report=term-missing"

