Metadata-Version: 2.4
Name: peer
Version: 0.2.0
Summary: Peer Assistant Omniscient avec interface vocale bidirectionnelle
Author-email: JCNM <jcnm@sylorion.com>
License: MIT
Project-URL: Homepage, https://github.com/jcnm/peer
Project-URL: Documentation, https://jcnm.github.io/peer
Project-URL: Repository, https://github.com/jcnm/peer
Project-URL: Issue Tracker, https://github.com/jcnm/peer/issues
Keywords: cli,tui,api,sui,tts,speech-recognition,assistant,omniscient
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.0.0
Requires-Dist: rich>=10.0.0
Requires-Dist: pydantic>=1.8.0
Requires-Dist: python-dotenv>=0.19.0
Requires-Dist: requests>=2.25.0
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: websockets>=10.0
Requires-Dist: structlog>=21.1.0
Requires-Dist: ollama>=0.1.0
Requires-Dist: transformers>=4.20.0
Requires-Dist: spacy>=3.4.0
Requires-Dist: tree-sitter>=0.20.0
Requires-Dist: pygments>=2.10.0
Requires-Dist: libcst>=0.4.0
Requires-Dist: pyttsx3>=2.90
Requires-Dist: SpeechRecognition>=3.10.0
Requires-Dist: pyaudio>=0.2.11
Requires-Dist: webrtcvad>=2.0.10
Requires-Dist: numpy<2
Requires-Dist: scipy>=1.7.0
Requires-Dist: tqdm>=4.62.0
Requires-Dist: colorama>=0.4.4
Requires-Dist: psutil>=5.8.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.18.0; extra == "dev"
Requires-Dist: pytest-cov>=2.12.0; extra == "dev"
Requires-Dist: black>=21.5b2; extra == "dev"
Requires-Dist: isort>=5.9.0; extra == "dev"
Requires-Dist: mypy>=0.900; extra == "dev"
Requires-Dist: flake8>=3.9.0; extra == "dev"
Provides-Extra: speech
Requires-Dist: pyttsx3>=2.90; extra == "speech"
Requires-Dist: pyaudio>=0.2.11; extra == "speech"
Requires-Dist: SpeechRecognition>=3.10.0; extra == "speech"
Requires-Dist: webrtcvad>=2.0.10; extra == "speech"
Requires-Dist: whisper>=1.0.0; extra == "speech"
Requires-Dist: piper-tts>=1.3.0; extra == "speech"
Requires-Dist: vosk>=0.3.42; extra == "speech"
Provides-Extra: ide
Requires-Dist: python-language-server>=0.36.2; extra == "ide"
Requires-Dist: pygls>=0.11.3; extra == "ide"
Dynamic: license-file

# Peer - Assistant Omniscient avec Interface Vocale Bidirectionnelle

Peer est un assistant de programmation avec interfaces multiples (CLI, TUI, API, SUI) qui peut être manipulé simultanément par différents canaux.

## Fonctionnalités

- Interface en ligne de commande (CLI)
- Interface textuelle (TUI)
- Interface API REST
- Interface vocale bidirectionnelle (SUI)
- Reconnaissance vocale avec plusieurs moteurs (Whisper, Vosk, Wav2Vec2)
- Synthèse vocale
- Architecture hexagonale pour une évolution facile

## Installation

```bash
# Cloner le dépôt
git clone https://github.com/jcnm/peer.git
cd peer

# Installer les dépendances
./install.sh
```

### Options d'installation

```bash
# Installation standard
./install.sh

# Installation avec téléchargement forcé des modèles
./install.sh --download-models

# Installation sans téléchargement des modèles
./install.sh --skip-models-download

# Installation avec environnement virtuel personnalisé
./install.sh --venv-dir /chemin/personnalisé

# Copier un environnement existant
./install.sh --copy-env-from /chemin/vers/env/existant

# Forcer la réinstallation
./install.sh --force

# Afficher l'aide complète
./install.sh --help
```

## Utilisation

```bash
# Interface en ligne de commande
./run.sh [commande] [arguments]

# Interface textuelle
./run_tui.sh

# Interface API
./run_api.sh

# Interface vocale
./run_sui.sh
```

## Diagnostic

En cas de problème, utilisez le script de diagnostic :

```bash
./diagnose_env.sh
```

Ce script vérifie l'environnement et propose des corrections automatiques pour les problèmes courants.

## Problèmes connus

### Erreur asyncio

Si vous rencontrez une erreur liée à asyncio (`SyntaxError: invalid syntax` avec `async`), exécutez :

```bash
pip uninstall -y asyncio
```

asyncio est un module standard de Python et ne devrait pas être installé via pip.

## Architecture

Peer utilise une architecture hexagonale (ports et adaptateurs) :

- **Domain** : Contient la logique métier et les entités
- **Infrastructure** : Contient les adaptateurs pour les services externes
- **Interfaces** : Contient les différentes interfaces utilisateur
- **Application** : Contient les services d'orchestration

## Commandes disponibles

- `aide` - Affiche l'aide des commandes disponibles
- `heure` - Affiche l'heure actuelle
- `date` - Affiche la date actuelle
- `version` - Affiche la version de Peer
- `echo [texte]` - Répète le texte fourni

## Licence

MIT
